# General parameters
optimizer: "lucie"
seed: 0
max_frames: 10000 # TODO 10000
stickiness: 0.25
d_fitness: 1
n_gen: 100000 # TODO 100000
validation: true
validation_size: 30 # number of eval per individual for evaluation
validation_freq: 500 # TODO 500 evaluate each validation_freq generations
validation_max_frames: 18000 # TODO 18000
n_eval_max: 120 # Max number of eval per gen
n_population: 12
n_elite: 3 # Number of elite pairs per generation
#eval_mutant: false # for GA
tournament_size: 3
greedy_elitism: true
is_epsilon_dynamic: true
epsilon: 1.0 # Initial epsilon
epsilon_ratio: 2 # epsilon = epsilon_ratio * bound_scale if is_epsilon_dynamic
delta: 0.1
bound_type: "lucie"
is_bound_scale_dynamic: true # if true, bound_scale = max-min fitness of prev gen
bound_scale: 1.0 # enitial bound scale
bound_scale_decay: 1.0 # exponential decay for bound_scale (set to 1.0 to cancel the effect)
bound_factor: 1.0 # multiplicative factor on the bound
bound_zeroer: -1 # TODO 100 bound set to 0 if ind.n_eval >= bound_zeroer (set to negative value to disable the effect)
log_gen: 50 # TODO 50 log scores each log_gen generations
save_gen: 500 # TODO 500 save genomes each save_gen generations
bootstrap: false # unused
grayscale: true
downscale: true

# Encoder's parameters
encoder:
  #n_population: 10
  rows: 1
  columns: 20
  recur: 0.0
  m_rate: 0.1
  out_m_rate: 0.2
  n_parameters: 1
  n_out: 1
  functions:
    - f_dilate
    - f_erode
    - f_subtract
    #- f_remove_details
    #- f_make_boxes
    #- f_felzenszwalb_segmentation
    #- f_components_segmentation
    #- f_box_segmentation
    - f_threshold
    - f_binary
    #- f_corners
    #- f_gaussian
    #- f_laplacian
    #- f_sobel_x
    #- f_sobel_y
    #- f_canny
    #- f_edges
    #- f_opening
    #- f_closing
    #- f_tophat
    #- f_bothat
    #- f_morphogradient
    #- f_morpholaplace
    - f_bitwise_not
    - f_bitwise_and
    - f_bitwise_or
    - f_bitwise_xor
    - f_motion_capture
    #- f_motion_distances

# Reducer's parameters
reducer:
  type: "pooling" # "pooling" or "centroid"
  pooling_function: "mean" # POOLING: "mean", "max", or "min"
  features_size: 5 # POOLING: size of the square down-sampled image
  #n_centroids: 15 # CENTROID: number of biggest objects tracked

# Controller's parameters
controller:
  #n_population: 10
  rows: 1
  columns: 60
  recur: 0.0
  m_rate: 0.1
  out_m_rate: 0.3
  n_parameters: 1
  n_cst_inputs: 10
  functions:
    - f_add
    - f_subtract
    - f_mult
    - f_div
    - f_abs
    - f_sqrt
    - f_lt
    - f_gt
    - f_and
    - f_or
    - f_xor
    - f_not
